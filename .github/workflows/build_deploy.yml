name: Build and publish Docker image, deploy

on:
  push:
    tags:
      - "v*.*.*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=edge,branch=master
            
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{  steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push-image
    steps:
      - uses: actions/checkout@v3
      - name: Prepare .env file for the deployment
        env:
          GF_SECURITY_ADMIN_PASSWORD: ${{ secrets.GF_SECURITY_ADMIN_PASSWORD }}
          GF_SECURITY_ADMIN_USER: ${{ secrets.GF_SECURITY_ADMIN_USER }}
        run: echo "DOMAIN=${{ secrets.DOMAIN }} \nGF_SECURITY_ADMIN_PASSWORD=$GF_SECURITY_ADMIN_PASSWORD \nGF_SECURITY_ADMIN_USER=$GF_SECURITY_ADMIN_USER" > .env
      - name: Remove existing containers
        uses: JimCronqvist/action-ssh@master
        with:
          hosts: ${{ secrets.SSH_HOST }}
          privateKey: ${{ secrets.PRIV_KEY }}
          command: docker rm -f turn grafana prometheus
      - name: Deploy docker compose to pre-configured server
        uses: TapTap21/docker-remote-deployment-action@v1.1
        with:
          remote_docker_host: ${{ secrets.SSH_HOST }}
          ssh_private_key: ${{ secrets.PRIV_KEY }}
          ssh_public_key: ${{ secrets.PUB_KEY }}
          stack_file_name: docker-compose.yml
          args: -p turn --env-file .env up -d --remove-orphans

